### 성능 테스트란 무엇이고 왜 할까?

    성능 테스트란 프로그램의 성능을 테스트하는 것이다.

    성능 테스트는 다음을 위해 진행한다.

    1. 오픈시 안전성 보장

        가장 중요한 이유이다. 만약 서비스를 오픈했는데 서버가 툭하면 죽고 여러 요청들이 매우 느리게 처리된다면, 사용자들은 그 서비스를 두 번 다시 사용하려고 하지 않을 것이다.
         즉 회사의 생존이 직결되어 있으므로 사전에 성능 테스트를 통하여 예상 사용자를 충분히 수용할 수 있는 정도로 서버를 구성해야 한다.


    2. 시스템의 병목 지점 사전 발견 및 조치

        목표 처리량에 도달하지 못했는데 시스템의 리소스가 한계에 도달했거나, 리소스는 널널한데 어떤 이유에 의해서 처리량이 더 이상 올라가지 않는 경우가 있다.

        이런 경우를 사전에 발견하고 조치해야 한다.

    3. 시스템의 오류 사전 확인

        시스템의 오류는 여러명의 사용자가 동시에 접속할 때 주로 드러난다. 이를 사전에 탐지하고 해결해야 한다.


    ---

    자바 개발자도 쉽고 즐겁게 배우는 테스팅 이야기, 219-220


### 성능 테스트의 종류에는 어떤 것이 있을까?
    1. 부하 테스트

       점진적으로 가상 사용자 수를 늘려가며 시스템의 최대TPS와 각 기능(혹은 트랜잭션)의 응답 시간을 측정하는 테스트

    2. 스트레스 테스트

       시스템의 최대 TPS를 넘어서는 부하를 계속 주면서 얼마나 버틸 수 있는지 알아내는 테스트

    3. 내구성 테스트

       오랜 기간(보통 8시간 이상, 24시간 이상도 있음) 동안 부하를 주면서 얼마나 버틸 수 있는지 알아내는 테스트.

       일반적으로 최대 TPS가 나오는 가상 사용자 수를 유지한다.

    4. 스파이크 테스트

       쿠폰을 발급하는 상황처럼 갑자기 트래픽이 몰리는 상황을 대비해서 가상 사용자수를 순간적으로 증가시키는 테스트.


    보통 실무에서는 내구성은 너무 오래 걸리고 스파이크는 다른시스템에 영향을 줄 수 있기 때문에 자주 하지는 않는다.
    
    ---
    
    자바 개발자도 쉽고 즐겁게 배우는 테스팅 이야기, 233-234


### 성능테스트 할 때 가장 중요한 지표는 무엇일까?
    1. TPS (Transaction Per Second)

        여기서 말하는 트랜잭션은 DB에 나오는 트랜잭션과는 사뭇 다르다.

        2가지를 보통 말하는데, 첫째는 사용자 기준 트랜잭션과 요청(Request) 기준 트랜잭션이다.

        예를 들어 사용자가 상품을 결제하고 결제 완료 버튼을 눌렀다고 해보자.

        이 때 결제 완료 버튼을 누른 것에 대한 모든 처리가 이루어지고 화면에 표시가 된다면 하나의 사용자 기준 트랜잭션이 처리되었다고 할 수 있다.

        결제 완료 버튼을 눌렀을 때 실제로 서버에는 주문 기록 저장에 대한 요청, 결제 기록 저장에 대한 요청, 결제 완료 화면 정보에 대한 요청 등 여러 요청이 보내질 수 있는데,
         요청 기준 트랜잭션은 이런 각각의 요청이 처리되는 것을 말한다. 간단히 말하면 JSP나 Servlet을 한 번 호출해서 결과가 리턴될 때까지를 말한다.

        **성능 테스트를 진행할 때는 사용자 기준 트랜잭션**을 사용한다. 그 이유는 실제 몇 명의 동시 사용자가 우리 시스템을 사용할 수 있는지 알 수 있기 때문이다.

        반면에 APM(Application Monitoring Tool)에서는 사용자 기준 트랜잭션을 분리하기가 어렵기 때문에 일반적으로 요청 기준 트랜잭션을 사용한다고 한다.

    2. 응답 시간

        응답 시간은 각각의 기능 또는 화면에 대한 응답 시간을 말한다.


    사용자가 늘어나는 상황에서 응답 시간은 일정하다가 TPS가 증가하지 않는 순간부터 응답 시간은 늘어나게 된다.

    그러므로 동시 접속자가 많은 상황에서도 사용자가 쾌적하게 서비스를 이용하기 위해서는 TPS를 늘려주어야 한다.

    ---

    자바 개발자도 쉽고 즐겁게 배우는 테스팅 이야기, 221-230

### 응답 시간을 판단할 때 평균, 최소, 최대 등 어떤 기준으로 판단하는 것이 좋을까?

    최소와 최대는 잘 사용하지 않는다. 보통은 평균을 사용하거나, 90~95th를 사용한다.(90 ~ 95%의 사람들이 이 시간 안에 응답을 받는다는 의미)

    ---

    자바 개발자도 쉽고 즐겁게 배우는 테스팅 이야기, 228p



### 성능 테스트 진행시 고려해야 할 사항은 무엇이 있을까?
    1. 성능 테스트를 진행하는 사이트에 보안 모듈을 잘 처리해야 한다.(없애고 테스트하거나, 성능 테스트용으로 바꾸기)
 
    2. 네트워크에 병목이 발생하지 않게 테스트를 수행하는 위치를 잘 설정해야 한다.
 
    3. 성능 테스트 툴은 보통 데이터를 주고 받는 것만 측정하기 때문에 브라우저가 화면을 그리는 시간은 측정하지 못한다.
       따라서 성능 테스트 목표 응답 시간은 브라우저가 화면 그리는 시간까지 감안해서 충분히 높게 설정해야 한다.

    4. 사용자들의 행동을 잘 시뮬레이션할 수 있어야 한다. 그러기 위해서 대기 시간(사용자가 응답을 받고 다시 
        요청하기까지의 시간, Think Time)을 잘 설정해야 한다.

    5. DB에서 쿼리를 캐싱하는 경우 고려해서 데이터 변경 고려하기

    6. 시스템에 따라 사용자 수가 급격하게 증가하면, 제대로 동작하지 않을 수 있으므로 사용자 수가 천천히 증가해서 
        목표 사용자 수에 이르도록 Ramp-Up Preiod를 충분히 준다.

    7. 오류가 발생했는지 반드시 확인한다. 모두 오류가 발생한 상황에서도 TPS와 응답 시간은 좋게 나올 수 있다.

    8. 성능 테스트 후 결과 정리를 잘해놓아야 나중에 분석이 용이하다.

    ---

    자바 개발자도 쉽고 즐겁게 배우는 테스팅 이야기, 12,13,14,15 파트


### 시스템의 목표 TPS는 어떻게 구할까?
    
    성능 테스트 대상 기능의 목표 TPS를 구하고 이 TPS들을 모두 더해준다.
    
    기능별 목표 TPS는 다음과 같이 구한다.
    
    ex) 상품 조회 - 예상 트랜잭션수(일별) 18,000
    
    18,000 / (12시간 * 60분 * 60초) = 0.41TPS (사용자가 상품 조회를 하루 중 09:00 ~ 21:00에 한다고 가정했을 때)
    
    이렇게 각각의 기능별 TPS를 구하고 모두 더해주면 시스템의 목표 TPS가 나온다.
    
    ---
    
    자바 개발자도 쉽고 즐겁게 배우는 테스팅 이야기, 241p
    
### 동시 사용자란?
    
    Concurrent User와 Active User로 나누는 것이 명확하다. Concurrent User는 현재 사이트에 접속해 있는 사람이고,
    Active User는 서버에 요청을 보내고 응답을 기다리고 있는 유저라고 생각하면 된다.
    
    ---
    
    자바 개발자도 쉽고 즐겁게 배우는 테스팅 이야기, 236-238
    
### 성능 테스트는 어떤 기능들을 대상으로 하는게 좋을까?
    
    당연한 얘기겠지만 가장 많이 사용되는 기능에 대해 테스트해야 한다. 그 이유는 20 80 법칙 때문이다.
    
    좀 더 세부적으로 나누어보면,
    
    - 가장 비중인 높고 많이 사용하는 기능
    - 사용자가 시스템을 사용하는데 맨 처음 관문이 되는 로그인 및 초기화면
    - 데이터베이스에 많은 부하를 발생시키는 기능
    
    이런 기능을 도출하기 위해서는 기존 시스템이 있따면 웹 로그를 분석하거나 모니터링 툴을 사용하는 것이 좋다.
    
    ---
    
    자바 개발자도 쉽고 즐겁게 배우는 테스팅 이야기, 240p

### 성능 테스트 보고서에 들어갈 내용은 어떤게 있을까?
    - 성능 테스트 개요
        
        이 성능 테스트를 왜 하는지, 얻고자 하는 것이 무엇인지, 일정 및 인원에 대한 설명
        
    - 성능 테스트 환경
        
        agent 장비가 어디서 어떻게 부하를 주는지 도식화하기
        
    - 성능 테스트 대상 및 시나리오
        
        테스트 대상이 어떤 화면(또는 API)이고 어떻게 선정되었고, 부하를 어떻게 주었는지 정리.
        
    - 테스트 결과
        
        응답시간과 TPS, CPU 사용량에 대한 결과 데이터를 나열하기. + 트랜잭션 성공 및 실패 건수, 네트워크 사용량 정보
        
        표로만 나열하기 보다는 그래프와 보완 설명을 함께 정리하는 것이 좋다.
        
    - 의견
        
        결과를 바탕으로 시스템이 오픈했을 때 얼마나 많은 사용자가 사용할 수 있는지, 문제될 만한 이슈들이 있는지를 정리한다.
        
    
    ---
    
    자바 개발자도 쉽고 즐겁게 배우는 테스팅 이야기, 279-292